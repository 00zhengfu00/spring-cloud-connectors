apply plugin: 'maven'

ext.optionalDeps = []
ext.providedDeps = []

ext.optional = { optionalDeps << it }
ext.provided = { providedDeps << it }

install {
	repositories.mavenInstaller {
		customizePom(pom, project)
	}
}

def customizePom(pom, gradleProject) {
	pom.whenConfigured { generatedPom ->
		// respect 'optional' and 'provided' dependencies
		gradleProject.optionalDeps.each { dep ->
			generatedPom.dependencies.find { it.artifactId == dep.name }?.optional = true
		}
		gradleProject.providedDeps.each { dep ->
			generatedPom.dependencies.find { it.artifactId == dep.name }?.scope = 'provided'
		}

		// eliminate test-scoped dependencies (no need in maven central poms)
		generatedPom.dependencies.removeAll { dep ->
			dep.scope == 'test'
		}

		// add all items necessary for maven central publication
		generatedPom.project {
			name = gradleProject.description
			description = gradleProject.description
			url = 'http://projects.spring.io/spring-cloud'
			organization {
				name = 'Spring IO'
				url = 'https://spring.io'
			}
			licenses {
				license {
					name 'The Apache Software License, Version 2.0'
					url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					distribution 'repo'
				}
			}

			scm {
				url = 'https://github.com/spring-projects/spring-cloud'
				connection = 'scm:git:https://github.com/spring-projects/spring-cloud.git'
				developerConnection = 'scm:git:https://github.com/spring-projects/spring-cloud.git'
			}

			issueManagement {
				system = 'GitHub'
				url = 'https://github.com/spring-projects/spring-cloud/issues'
			}

			developers {
				developer {
					id = 'ramnivas'
					name = 'Ramnivas Laddad'
					email = 'rladdad@gopivotal.com'
				}
			}
		}
	}
}

